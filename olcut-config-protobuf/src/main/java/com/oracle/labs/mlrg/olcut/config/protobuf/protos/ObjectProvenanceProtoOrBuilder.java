// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: olcut_proto.proto

package com.oracle.labs.mlrg.olcut.config.protobuf.protos;

public interface ObjectProvenanceProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:olcut.ObjectProvenanceProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 index = 1;</code>
   * @return The index.
   */
  int getIndex();

  /**
   * <code>string object_name = 2;</code>
   * @return The objectName.
   */
  java.lang.String getObjectName();
  /**
   * <code>string object_name = 2;</code>
   * @return The bytes for objectName.
   */
  com.google.protobuf.ByteString
      getObjectNameBytes();

  /**
   * <code>string object_class_name = 3;</code>
   * @return The objectClassName.
   */
  java.lang.String getObjectClassName();
  /**
   * <code>string object_class_name = 3;</code>
   * @return The bytes for objectClassName.
   */
  com.google.protobuf.ByteString
      getObjectClassNameBytes();

  /**
   * <code>string provenance_class_name = 4;</code>
   * @return The provenanceClassName.
   */
  java.lang.String getProvenanceClassName();
  /**
   * <code>string provenance_class_name = 4;</code>
   * @return The bytes for provenanceClassName.
   */
  com.google.protobuf.ByteString
      getProvenanceClassNameBytes();

  /**
   * <code>map&lt;string, int32&gt; values = 5;</code>
   */
  int getValuesCount();
  /**
   * <code>map&lt;string, int32&gt; values = 5;</code>
   */
  boolean containsValues(
      java.lang.String key);
  /**
   * Use {@link #getValuesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Integer>
  getValues();
  /**
   * <code>map&lt;string, int32&gt; values = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.Integer>
  getValuesMap();
  /**
   * <code>map&lt;string, int32&gt; values = 5;</code>
   */

  int getValuesOrDefault(
      java.lang.String key,
      int defaultValue);
  /**
   * <code>map&lt;string, int32&gt; values = 5;</code>
   */

  int getValuesOrThrow(
      java.lang.String key);
}
